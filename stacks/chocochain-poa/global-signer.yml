version: "3.7"
services:
    extractor:
        image: ${REGISTRY_URL:-iie.ac.cn}/chocochain-essentials
        entrypoint: ["extractor", "-dbconn", "host=postgres user=chocochain password=123456 dbname=dashboard sslmode=disable", "-gethaddr=ws://fullnode:8546", "-maxopenconn=10", "-maxidelconn=5"]
        networks:
            - backend
            - dashboard_backend

    ethstats:
        image: ${REGISTRY_URL:-iie.ac.cn}/ethstats
        environment:
            - WS_SECRET=123456
        ports:
            - ${ETHSTATS_PORT:-3000}:3000
        networks:
            - backend
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == manager]
    
    confignode:
        image: ${REGISTRY_URL:-iie.ac.cn}/chocochain-essentials
        environment:
            - NETWORK_ID=${NETWORK_ID}
            - SIGNER_COUNT=${SIGNER_COUNT:-1}
            - BLOCK_INTERVAL=${BLOCK_INTERVAL}
            - BLOCK_GASLIMIT=${BLOCK_GASLIMIT}
        networks:
            - backend
        volumes:
            - config-volume:/configs
        entrypoint: /entrypoint.sh
        deploy:
            endpoint_mode: dnsrr
            replicas: 1
            placement:
                constraints: [node.role == manager]
        configs:
            - source: confignode_script
              target: /entrypoint.sh
              mode: 0550

    bootnode:
        image: ${REGISTRY_URL:-iie.ac.cn}/chocochain-essentials
        networks:
            - backend
        entrypoint: /entrypoint.sh
        depends_on:
            - confignode
        deploy:
            endpoint_mode: dnsrr
            replicas: 1
            placement:
                constraints: [node.role == manager]
        configs:
            - source: bootnode_script
              target: /entrypoint.sh
              mode: 0550

    fullnode:
        image: ${REGISTRY_URL:-iie.ac.cn}/chocochain
        environment:
            - NODE_ID={{.Service.Name}}
            - EXTRA_FLAGS=${EXTRA_FLAGS} --ethstats {{.Service.Name}}-{{.Node.Hostname}}:123456@ethstats:3000
        networks:
            - backend
        volumes:
            - node-volume:/chocochain
        entrypoint: /entrypoint.sh
        depends_on:
            - confignode
        deploy:
            mode: global
            endpoint_mode: vip
        configs:
            - source: fullnode_script
              target: /entrypoint.sh
              mode: 0550
            - source: preload_script
              target: /scripts.js
              mode: 0550
        secrets:
            - source: sealer_password
              mode: 0400

    backupnode:
        image: ${REGISTRY_URL:-iie.ac.cn}/chocochain
        environment:
            - NODE_ID={{.Service.Name}}-{{.Task.Slot}}
            - EXTRA_FLAGS=${EXTRA_FLAGS} --ethstats {{.Service.Name}}-{{.Task.Slot}}:123456@ethstats:3000
        networks:
            - backend
        volumes:
            - node-volume:/chocochain
        entrypoint: /entrypoint.sh
        depends_on:
            - confignode
        deploy:
            endpoint_mode: vip
            replicas: 0
        configs:
            - source: default_script
              target: /entrypoint.sh
              mode: 0550
            - source: preload_script
              target: /scripts.js
              mode: 0550

configs:
    default_script:
        external: true
        name: ${DEFAULT_SCRIPT:-default_script}
    fullnode_script:
        external: true
        name: ${FULLNODE_SCRIPT:-fullnode_script}
    preload_script:
        external: true
        name: ${PRELOAD_SCRIPT:-preload_script}
    bootnode_script:
        external: true
        name: ${BOOTNODE_SCRIPT:-bootnode_script}
    confignode_script:
        external: true
        name: ${CONFIGNODE_SCRIPT:-confignode_script}

secrets:
    sealer_password:
        external: true
        name: ${SEALER_PASSWORD:-sealer_password}

networks:
    backend:
        driver: overlay
        attachable: true
    dashboard_backend:
        external: true

volumes:
    config-volume:
    node-volume:
    
